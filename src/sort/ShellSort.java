package sort;

import CustomList.MyArrayList;

/**
 * Реализация стратегии сортировки методом Шелла.
 * <br>
 * Метод Шелла — это улучшение сортировки вставками, которое использует несколько шагов
 * для ускорения сортировки, поочередно уменьшая интервалы между элементами, которые сравниваются.
 *
 * @param <T> Тип элементов списка, должен быть сравнимым (реализующий интерфейс {@link Comparable}).
 */
public class ShellSort<T extends Comparable<T>> implements SortStrategy<T> {

    /**
     * Метод сортировки методом Шелла.
     * <br>
     * Этот метод выполняет сортировку списка с использованием промежуточных шагов,
     * начиная с больших интервалов и постепенно их уменьшая.
     *
     * @param list Список элементов, который будет отсортирован.
     */
    @Override
    public void sort(MyArrayList<T> list) {
        int n = list.size(); // Размер списка

        // Начинаем с большого интервала, который уменьшается вдвое на каждом шаге
        for (int gap = n / 2; gap > 0; gap /= 2) {
            // Проходим по списку с учетом шага gap
            for (int i = gap; i < n; i++) {
                T temp = list.get(i); // Временный элемент для вставки
                int j;

                // Сдвигаем элементы на нужное место для вставки
                for (j = i; j >= gap && list.get(j - gap).compareTo(temp) > 0; j -= gap) {
                    list.set(j, list.get(j - gap));  // Перемещаем элемент
                }
                list.set(j, temp); // Вставляем временный элемент в нужную позицию
            }
        }
    }
}
